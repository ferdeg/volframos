import tkinter as tk
from tkinter import messagebox, simpledialog
from PIL import Image, ImageTk
import os
import random

SAVE_FILE = "save.txt"
BACKGROUND_IMAGE = "ryt.png"   # —Ñ–æ–Ω –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è —Ç–æ–π –∂–µ
SPRITE_IMAGE = "rot.png"       # –Ω–æ–≤–∏–π —Å–ø—Ä–∞–π—Ç –¥–ª—è –∫–ª—ñ–∫—ñ–≤

class ClickerGame:
    def __init__(self, root):
        self.root = root
        self.root.title("–ö–ª—ñ–∫–µ—Ä")
        self.root.geometry("400x350")
        self.root.resizable(False, False)

        # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É
        self.load_game()

        # –§–æ–Ω
        bg_img = Image.open(BACKGROUND_IMAGE).resize((400, 350))
        self.bg_photo = ImageTk.PhotoImage(bg_img)
        self.bg_label = tk.Label(root, image=self.bg_photo)
        self.bg_label.place(x=0, y=0, relwidth=1, relheight=1)

        # –°–ø—Ä–∞–π—Ç (–∫–ª—ñ–∫‚Äë–∑–æ–Ω–∞)
        sprite_img = Image.open(SPRITE_IMAGE).resize((100, 100))
        self.sprite_photo = ImageTk.PhotoImage(sprite_img)
        self.sprite = tk.Label(root, image=self.sprite_photo, bg="white")
        self.sprite.place(x=150, y=80)
        self.sprite.bind("<Button-1>", self.left_click)
        self.sprite.bind("<Button-3>", self.right_click)

        # –õ—ñ—á–∏–ª—å–Ω–∏–∫ –æ—á–æ–∫
        self.score_label = tk.Label(root, text="", font=("Arial", 18), bg="#ffffff")
        self.score_label.place(x=20, y=10)
        self.update_score()  # –ø–æ–∫–∞–∂–µ –æ—á–∫–∏ —Ç–∞ –ø–µ—Ä–µ—Å—ñ—á–µ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –º–∞–≥–∞–∑–∏–Ω—É

        # –ö–Ω–æ–ø–∫–∏
        self.shop_btn = tk.Button(root, text="–ú–∞–≥–∞–∑–∏–Ω", font=("Arial", 12), command=self.open_shop)
        self.shop_btn.place(x=100, y=260)

        self.roulette_btn = tk.Button(root, text="üé∞ –†—É–ª–µ—Ç–∫–∞", font=("Arial", 12), command=self.roulette)
        self.roulette_btn.place(x=200, y=260)

        # –ê–≤—Ç–æ–∫–ª—ñ–∫
        self.root.after(1000, self.auto_click)

    # ===== –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è / –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è =====
    def save_game(self):
        """–ó–±–µ—Ä—ñ–≥–∞—î –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å —É save.txt"""
        with open(SAVE_FILE, "w") as f:
            f.write(
                f"{self.score},{self.click_power},{self.right_click_power},"
                f"{self.auto_click_power},{int(self.shop_disabled)}"
            )

    def load_game(self):
        """–ß–∏—Ç–∞—î –ø—Ä–æ–≥—Ä–µ—Å —ñ–∑ save.txt –∞–±–æ —Å—Ç–∞–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º"""
        # –¥–µ—Ñ–æ–ª—Ç
        self.score = 0
        self.click_power = 1
        self.right_click_power = 5
        self.auto_click_power = 0
        self.shop_disabled = False

        if os.path.exists(SAVE_FILE):
            with open(SAVE_FILE, "r") as f:
                data = f.read().split(",")
            try:
                self.score = int(data[0])
                self.click_power = int(data[1])
                self.right_click_power = int(data[2])
                self.auto_click_power = int(data[3])
                self.shop_disabled = bool(int(data[4])) if len(data) > 4 else False
            except (ValueError, IndexError):
                pass  # —è–∫—â–æ —Ñ–∞–π–ª –±–∏—Ç–∏–π ‚Äî —ñ–≥–Ω–æ—Ä—É—î–º–æ

    # ===== –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ –∫–ª—ñ–∫—ñ–≤ =====
    def left_click(self, _=None):
        self.score += self.click_power
        self.update_score()

    def right_click(self, _=None):
        self.score += self.right_click_power
        self.update_score()

    def update_score(self):
        """–û–Ω–æ–≤–ª—é—î –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –±–ª–æ–∫—É—î/—Ä–æ–∑–±–ª–æ–∫—É—î –º–∞–≥–∞–∑–∏–Ω"""
        # –Ø–∫—â–æ –æ—á–∫–∏ –≤—ñ–¥ º—î–º–Ω—ñ ‚Äî –º–∞–≥–∞–∑–∏–Ω –±–ª–æ–∫—É—î—Ç—å—Å—è, —è–∫—â–æ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å —É + ‚Äî —Ä–æ–∑–±–ª–æ–∫.
        self.shop_disabled = self.score < 0
        self.score_label.config(text=f"–û—á–∫–∏: {self.score}")
        self.save_game()

    def auto_click(self):
        self.score += self.auto_click_power
        self.update_score()
        self.root.after(1000, self.auto_click)

    # ===== –ú–∞–≥–∞–∑–∏–Ω =====
    def open_shop(self):
        if self.shop_disabled:
            messagebox.showerror("üö´ –ú–∞–≥–∞–∑–∏–Ω –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ", "–û—á–∫–∏ –≤—ñ–¥ º—î–º–Ω—ñ. –ó–∞—Ä–æ–±—ñ—Ç—å 0 –∞–±–æ –±—ñ–ª—å—à–µ, —â–æ–± —Ä–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏ –º–∞–≥–∞–∑–∏–Ω.")
            return

        shop = tk.Toplevel(self.root)
        shop.title("–ú–∞–≥–∞–∑–∏–Ω")
        shop.geometry("350x300")

        def try_buy(cost: int, action):
            if self.score >= cost:
                self.score -= cost
                action()
                self.update_score()
                messagebox.showinfo("‚úÖ –ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è", "–ö—É–ø–ª–µ–Ω–æ!")
            else:
                messagebox.showwarning("‚ùå –ù–µ –≤–∏—Å—Ç–∞—á–∞—î –æ—á–æ–∫", f"–ü–æ—Ç—Ä—ñ–±–Ω–æ {cost} –æ—á–æ–∫.")

        tk.Label(shop, text="–ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è", font=("Arial", 14)).pack(pady=10)

        tk.Button(shop, text="–ö–ª—ñ–∫ +1 (30)", command=lambda: try_buy(30, lambda: setattr(self, 'click_power', self.click_power + 1))).pack(pady=2)
        tk.Button(shop, text="–ê–≤—Ç–æ–∫–ª—ñ–∫ +2/—Å–µ–∫ (50)", command=lambda: try_buy(50, lambda: setattr(self, 'auto_click_power', self.auto_click_power + 2))).pack(pady=2)
        tk.Button(shop, text="–ü–ö–ú +10 (40)", command=lambda: try_buy(40, lambda: setattr(self, 'right_click_power', self.right_click_power + 10))).pack(pady=2)
        tk.Button(shop, text="–ö–ª—ñ–∫ √ó2 (80)", command=lambda: try_buy(80, lambda: setattr(self, 'click_power', self.click_power * 2))).pack(pady=2)
        tk.Button(shop, text="–ê–≤—Ç–æ–∫–ª—ñ–∫ √ó2 (100)", command=lambda: try_buy(100, lambda: setattr(self, 'auto_click_power', self.auto_click_power * 2))).pack(pady=2)
        tk.Button(shop, text="–ü–ö–ú √ó2 (90)", command=lambda: try_buy(90, lambda: setattr(self, 'right_click_power', self.right_click_power * 2))).pack(pady=2)

    # ===== –†—É–ª–µ—Ç–∫–∞ =====
    def roulette(self):
        bet = simpledialog.askinteger("üé∞ –†—É–ª–µ—Ç–∫–∞", "–í–≤–µ–¥–∏ —Å—Ç–∞–≤–∫—É:")
        if bet is None:
            return
        if bet <= 0:
            messagebox.showerror("‚ö†Ô∏è", "–°—Ç–∞–≤–∫–∞ –º–∞—î –±—É—Ç–∏ > 0")
            return

        if random.random() < 0.5:  # –ø—Ä–æ–≥—Ä–∞—à
            penalty = bet * 10
            self.score -= penalty
            messagebox.showinfo("üò¢ –ü—Ä–æ–≥—Ä–∞—à", f"–¢–∏ –ø—Ä–æ–≥—Ä–∞–≤! -{penalty} –æ—á–æ–∫.")
        else:  # –≤–∏–≥—Ä–∞—à
            win = bet * 4
            self.score += win
            messagebox.showinfo("üéâ –í–∏–≥—Ä–∞—à!", f"–¢–∏ –≤–∏–≥—Ä–∞–≤! +{win} –æ—á–æ–∫.")
        self.update_score()


if __name__ == "__main__":
    root = tk.Tk()
    game = ClickerGame(root)
    root.mainloop()
